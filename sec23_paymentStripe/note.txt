1.checkout created... now from cart it is redirected to checkout instead of order page
2. login stripe.(after login we're in test mode).stripe not available in india
3.stripe->developer->api Publishable key(copy that )
4.now in checkout.ejs link api and copy that key.
5.eventlistner in checkout.ejs    and sessionID which is generated in getcheckout controller
6.in get checkout.
install stripe package
import it with secretkey (available below Publishable key)
now stripe.checkout.sessions.create , obj is defined based on below link
https://docs.stripe.com/api/checkout/sessions/object


exports.getCheckout = (req, res, next) => {
    let product;
    let total;
    req.user
    .populate('cart.items.productId')//now polpulate return with promise
    //.execPopulate()//in ver6 of mongoose using execPopulate it will return promise
    .then( user => {
        console.log(user.cart.items);
        products = user.cart.items
        total = 0;
        products.forEach(prod => {
            total += prod.quantity * prod.productId.price;
        })
        return stripe.checkout.sessions.create({
            payment_method_types: ['card'],
            line_items: products.map((p) => {
              return {
                price_data: {
                  currency: 'INR',
                  product_data: {
                    name: p.productId.title,
                    description: p.productId.description,
                  },
                  unit_amount: p.productId.price * 100,
                },
                quantity: p.quantity,
              };
            }),
            mode: 'payment',
            success_url:
              req.protocol + '://' + req.get('host') + '/checkout/success', // => http://localhost:3000
            cancel_url: req.protocol + '://' + req.get('host') + '/checkout/cancel',
          });
    })
    .then(session => {
        console.log('payment session created')
        res.render('shop/checkout',{
            path: '/checkout',
            pageTitle: '/checkout',
            products: products,
            totalSum: total,
            sessionId: session.id
        })
    })
    .catch( err => {
        console.log('inside checkout error')
        const error = new Error('checkout failed');
        error.httpStatusCode = 500;
        return next(error)
    }); 
}

